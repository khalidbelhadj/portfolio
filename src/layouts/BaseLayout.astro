---
import "@fontsource/geist-sans";
import "../styles/globals.css";

import BaseHead from "../components/BaseHead.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import { ViewTransitions } from "astro:transitions";
---

<!doctype html>
<html lang="en" class="bg-background w-dvw text-sm overflow-y-auto">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <ViewTransitions />
  </head>

  <body class="w-full">
    <div
      class="max-w-screen-md mx-auto max-md:pb-10 border-x min-h-screen flex flex-col bg-background"
    >
      <header
        class="flex items-center justify-between text-foreground/60 transition-all p-3 border-b"
      >
        <div>Khalid Belhadj</div>
        <div class="flex items-center gap-2">
          <div class="bg-green-700 w-2 h-2 rounded-full animate-pulse"></div>
          <div transition:persist id="location">Edinburgh, United Kingdom</div>
        </div>
      </header>
      <main class="w-full p-3 flex flex-col gap-3">
        <slot />
      </main>
    </div>
  </body>
</html>

<script>
  import { LOCATION_CHANNEL, DEFAULT_LOCATION } from "../consts";

  const getLocation = async () => {
    const data = await fetch(LOCATION_CHANNEL);
    const json = await data.json();
    const lastEntryId = +json["channel"]["last_entry_id"];
    if (!lastEntryId) return DEFAULT_LOCATION;
    const lastEntry = (json["feeds"] as any[]).find(
      (e) => +e["entry_id"] === lastEntryId
    );
    if (!lastEntry) return DEFAULT_LOCATION;
    const region = lastEntry["field1"];
    const city = lastEntry["field2"];
    return `${city}, ${region}`;
  };

  // Update location
  const locationDiv = document.querySelector("#location");
  if (!locationDiv) throw new Error("location div not found");
  getLocation().then((location) => {
    locationDiv.textContent = location;
  });

  // Set theme
  const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
  document.documentElement.classList.toggle("dark", prefersDark);

  // Watch os theme change
  window
    .matchMedia("(prefers-color-scheme: dark)")
    .addEventListener("change", (e) => {
      document.documentElement.classList.toggle("dark", e.matches);
    });
</script>
